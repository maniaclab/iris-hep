apiVersion: v1
kind: Pod
metadata:
  labels:
    k8s-app: jupyterlab
    notebook-id: {{notebook_id}}
    notebook-name: {{notebook_name}}
    owner: {{owner}}
    globus-id: {{globus_id}}
    time2delete: ttl-{{hours_remaining}}
  name: {{notebook_id}}
  namespace: {{namespace}}
spec:
  {% if gpu_request %}
  nodeSelector:
    nvidia.com/gpu.memory: "{{gpu_memory}}"
  {% endif %}
  containers:
  - name: {{notebook_id}}
    args:
    - /.run
    - /ML_platform_tests/SetupPrivateJupyterLab.sh
    env:
    - name: "JUPYTER_TOKEN"
      value: {{token}}
    - name: API_TOKEN
      valueFrom:
        secretKeyRef:
          name: ciconnect-creds
          key: token
    - name: OWNER
      value: {{owner}}
    - name: OWNER_UID
      value: "{{owner_uid}}"
    - name: CONNECT_GROUP
      value: atlas-ml
    - name: CONNECT_GID
      value: "5947"
    image: {{image}}
    imagePullPolicy: Always
    ports:
    - containerPort: 9999
    resources:
      limits:
        cpu: {{cpu_limit}}
        memory: {{memory_limit}}
        {% if gpu_request %}
        nvidia.com/gpu: {{gpu_limit}}
        {% endif %}
      requests:
        cpu: {{cpu_request}}
        memory: {{memory_request}}
        {% if gpu_request %}
        nvidia.com/gpu: {{gpu_request}}
        {% endif %}
    volumeMounts:
        - name: mypvc
          mountPath: /home/{{owner}}
  tolerations:
  - key: "atlas-analytics"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  restartPolicy: Always
  volumes:
  - name: mypvc
    persistentVolumeClaim:
      claimName: {{owner}}-cephfs-pvc
      readOnly: false
      accessMode: ReadWriteMany